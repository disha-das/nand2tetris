// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	And16(a=true, b[0..13]=address, out[12..13]=addrhigh);
	And16(a=true, b[0..13]=address, out[0..11]=addrlow);
	DMux4Way(in=load, sel=addrhigh, a=a, b=b, c=c, d=d);
	RAM4K(in=in, load=a, address=addrlow, out=rama);
	RAM4K(in=in, load=b, address=addrlow, out=ramb);
	RAM4K(in=in, load=c, address=addrlow, out=ramc);
	RAM4K(in=in, load=d, address=addrlow, out=ramd);
	Mux4Way16(a=rama,b=ramb,c=ramc,d=ramd, sel=addrhigh, out=out);
}